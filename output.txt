Wed Jun  4 09:07:36 UTC 2025
Linux LinuxMachine 5.15.167.4-microsoft-standard-WSL2 #1 SMP Tue Nov 5 00:21:55 UTC 2024 x86_64 x86_64 x86_64 GNU/Linux
uid=1000(cssuwbstudent) gid=1000(cssuwbstudent) groups=1000(cssuwbstudent),10(wheel)
=====================================================
1. If the section below is empty, the program compiles 
   without warnings with -Wall -Wextra flags
=====================================================
store_test.cpp: In function ‘void testStore2()’:
store_test.cpp:75:12: warning: unused variable ‘movie’ [-Wunused-variable]
   75 |     Movie *movie = MovieFactory::create(genre, vs);
      |            ^~~~~
=====================================================
2. If the section below is empty or has the expected output 
    the program puns and produces correct output
=====================================================
Start testStore1
End testStore1
Start testStore2
End testStore2
=====================================
Start testStoreFinal
==========================
1939 7, Judy Garland, Victor Fleming, The Wizard of Oz (10) - Classics
Barry Levinson, Good Morning Vietnam, 1988 (10) - Drama
Sleepless in Seattle, 1993, Nora Ephron (10) - Comedy
==========================
Don't know how to create H
Don't know how to create H
Don't know how to create B
Don't know how to create R
1939 7, Judy Garland, Victor Fleming, The Wizard of Oz (10) - Classics
Barry Levinson, Good Morning Vietnam, 1988 (10) - Drama
Sleepless in Seattle, 1993, Nora Ephron (10) - Comedy
==========================
Don't know how to create B
Don't know how to create B
1939 7, Judy Garland, Victor Fleming, The Wizard of Oz (10) - Classics
Barry Levinson, Good Morning Vietnam, 1988 (10) - Drama
Sleepless in Seattle, 1993, Nora Ephron (10) - Comedy
==========================
Don't know how to create H
End testStoreFinal
=====================================
Done.
=====================================================
3. If the section below is empty, then there are no clang-tidy warnings 
   (ignore warnings from system headers, such as "13554 warnings generated.")
=====================================================
[1/9] Processing file /home/cssuwbstudent/Kwright6/CSS343/343-movies-Kwright6/classics.cpp.
17293 warnings generated.
[2/9] Processing file /home/cssuwbstudent/Kwright6/CSS343/343-movies-Kwright6/comedy.cpp.
34313 warnings generated.
[3/9] Processing file /home/cssuwbstudent/Kwright6/CSS343/343-movies-Kwright6/command.cpp.
54045 warnings generated.
[4/9] Processing file /home/cssuwbstudent/Kwright6/CSS343/343-movies-Kwright6/drama.cpp.
71065 warnings generated.
[5/9] Processing file /home/cssuwbstudent/Kwright6/CSS343/343-movies-Kwright6/inventoryCmd.cpp.
90799 warnings generated.
[6/9] Processing file /home/cssuwbstudent/Kwright6/CSS343/343-movies-Kwright6/main.cpp.
104602 warnings generated.
[7/9] Processing file /home/cssuwbstudent/Kwright6/CSS343/343-movies-Kwright6/movie.cpp.
121637 warnings generated.
[8/9] Processing file /home/cssuwbstudent/Kwright6/CSS343/343-movies-Kwright6/movieStore.cpp.
142389 warnings generated.
[9/9] Processing file /home/cssuwbstudent/Kwright6/CSS343/343-movies-Kwright6/store_test.cpp.
163143 warnings generated.
Suppressed 163143 warnings (163143 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.
=====================================================
4. If the section below is empty, clang-format does not find any formatting issues
   You can fix formatting errors using "clang-format -i <filename>" on command line
=====================================================
Running clang-format on ./classics.cpp
Running clang-format on ./comedy.cpp
Running clang-format on ./command.cpp
Running clang-format on ./drama.cpp
Running clang-format on ./inventoryCmd.cpp
Running clang-format on ./main.cpp
Running clang-format on ./movie.cpp
Running clang-format on ./movieStore.cpp
Running clang-format on ./store_test.cpp
=====================================================
5. If there are any memory leaks, it should be in the output below
=====================================================
=====================================================
6. Using valgrind to check for memory leaks
   Check for "definitely lost" in the output below
=====================================================
==44710== Memcheck, a memory error detector
==44710== Copyright (C) 2002-2024, and GNU GPL'd, by Julian Seward et al.
==44710== Using Valgrind-3.23.0 and LibVEX; rerun with -h for copyright info
==44710== Command: ./a.out
==44710== Parent PID: 44373
==44710== 
==44710== 
==44710== HEAP SUMMARY:
==44710==     in use at exit: 826 bytes in 15 blocks
==44710==   total heap usage: 113 allocs, 98 frees, 117,391 bytes allocated
==44710== 
==44710== LEAK SUMMARY:
==44710==    definitely lost: 640 bytes in 9 blocks
==44710==    indirectly lost: 186 bytes in 6 blocks
==44710==      possibly lost: 0 bytes in 0 blocks
==44710==    still reachable: 0 bytes in 0 blocks
==44710==         suppressed: 0 bytes in 0 blocks
==44710== Rerun with --leak-check=full to see details of leaked memory
==44710== 
==44710== For lists of detected and suppressed errors, rerun with: -s
==44710== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
Wed Jun  4 09:08:01 UTC 2025
=====================================================
To create an output.txt file with all the output from this script
Run the below command
      ./create-output.sh > output.txt 2>&1 
=====================================================
