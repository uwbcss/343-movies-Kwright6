Tue Jun  3 10:54:20 UTC 2025
Linux LinuxMachine 5.15.167.4-microsoft-standard-WSL2 #1 SMP Tue Nov 5 00:21:55 UTC 2024 x86_64 x86_64 x86_64 GNU/Linux
uid=1000(cssuwbstudent) gid=1000(cssuwbstudent) groups=1000(cssuwbstudent),10(wheel)
=====================================================
1. If the section below is empty, the program compiles 
   without warnings with -Wall -Wextra flags
=====================================================
movieStore.cpp: In member function ‘void MovieStore::executeCommands(const string&)’:
movieStore.cpp:58:48: warning: unused parameter ‘filename’ [-Wunused-parameter]
   58 | void MovieStore::executeCommands(const string &filename) {
      |                                  ~~~~~~~~~~~~~~^~~~~~~~
store_test.cpp: In function ‘void testStore2()’:
store_test.cpp:75:12: warning: unused variable ‘movie’ [-Wunused-variable]
   75 |     Movie *movie = MovieFactory::create(genre, vs);
      |            ^~~~~
=====================================================
2. If the section below is empty or has the expected output 
    the program puns and produces correct output
=====================================================
Start testStore1
End testStore1
Start testStore2
D, 10, Barry Levinson, Good Morning Vietnam, 1988
End testStore2
=====================================
Start testStoreFinal
End testStoreFinal
=====================================
Done.
=====================================================
3. If the section below is empty, then there are no clang-tidy warnings 
   (ignore warnings from system headers, such as "13554 warnings generated.")
=====================================================
[1/7] Processing file /home/cssuwbstudent/Kwright6/CSS343/343-movies-Kwright6/command.cpp.
17035 warnings generated.
[2/7] Processing file /home/cssuwbstudent/Kwright6/CSS343/343-movies-Kwright6/drama.cpp.
34055 warnings generated.
[3/7] Processing file /home/cssuwbstudent/Kwright6/CSS343/343-movies-Kwright6/inventoryCmd.cpp.
51091 warnings generated.
[4/7] Processing file /home/cssuwbstudent/Kwright6/CSS343/343-movies-Kwright6/main.cpp.
64894 warnings generated.
[5/7] Processing file /home/cssuwbstudent/Kwright6/CSS343/343-movies-Kwright6/movie.cpp.
81929 warnings generated.
[6/7] Processing file /home/cssuwbstudent/Kwright6/CSS343/343-movies-Kwright6/movieStore.cpp.
102678 warnings generated.
[7/7] Processing file /home/cssuwbstudent/Kwright6/CSS343/343-movies-Kwright6/store_test.cpp.
120732 warnings generated.
Suppressed 120732 warnings (120732 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.
=====================================================
4. If the section below is empty, clang-format does not find any formatting issues
   You can fix formatting errors using "clang-format -i <filename>" on command line
=====================================================
Running clang-format on ./command.cpp
Running clang-format on ./drama.cpp
Running clang-format on ./inventoryCmd.cpp
Running clang-format on ./main.cpp
Running clang-format on ./movie.cpp
Running clang-format on ./movieStore.cpp
Running clang-format on ./store_test.cpp
=====================================================
5. If there are any memory leaks, it should be in the output below
=====================================================
=====================================================
6. Using valgrind to check for memory leaks
   Check for "definitely lost" in the output below
=====================================================
==14589== Memcheck, a memory error detector
==14589== Copyright (C) 2002-2024, and GNU GPL'd, by Julian Seward et al.
==14589== Using Valgrind-3.23.0 and LibVEX; rerun with -h for copyright info
==14589== Command: ./a.out
==14589== Parent PID: 14303
==14589== 
==14589== 
==14589== HEAP SUMMARY:
==14589==     in use at exit: 119 bytes in 2 blocks
==14589==   total heap usage: 21 allocs, 19 frees, 95,044 bytes allocated
==14589== 
==14589== LEAK SUMMARY:
==14589==    definitely lost: 88 bytes in 1 blocks
==14589==    indirectly lost: 31 bytes in 1 blocks
==14589==      possibly lost: 0 bytes in 0 blocks
==14589==    still reachable: 0 bytes in 0 blocks
==14589==         suppressed: 0 bytes in 0 blocks
==14589== Rerun with --leak-check=full to see details of leaked memory
==14589== 
==14589== For lists of detected and suppressed errors, rerun with: -s
==14589== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
Tue Jun  3 10:54:39 UTC 2025
=====================================================
To create an output.txt file with all the output from this script
Run the below command
      ./create-output.sh > output.txt 2>&1 
=====================================================
