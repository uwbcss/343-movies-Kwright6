Wed Jun  4 08:22:01 UTC 2025
Linux LinuxMachine 5.15.167.4-microsoft-standard-WSL2 #1 SMP Tue Nov 5 00:21:55 UTC 2024 x86_64 x86_64 x86_64 GNU/Linux
uid=1000(cssuwbstudent) gid=1000(cssuwbstudent) groups=1000(cssuwbstudent),10(wheel)
=====================================================
1. If the section below is empty, the program compiles 
   without warnings with -Wall -Wextra flags
=====================================================
store_test.cpp: In function ‘void testStore2()’:
store_test.cpp:75:12: warning: unused variable ‘movie’ [-Wunused-variable]
   75 |     Movie *movie = MovieFactory::create(genre, vs);
      |            ^~~~~
=====================================================
2. If the section below is empty or has the expected output 
    the program puns and produces correct output
=====================================================
Start testStore1
End testStore1
Start testStore2
Unknown movie type: CEnd testStore2
=====================================
Start testStoreFinal
Unknown movie type: C, discarding line:  10, Victor Fleming, The Wizard of Oz, Judy Garland 7 1939
==========================
Barry Levinson, Good Morning Vietnam, 1988 (10) - Drama
Sleepless in Seattle, 1993, Nora Ephron (10) - Comedy
==========================
Don't know how to create H
Don't know how to create H
Don't know how to create B
Don't know how to create R
Barry Levinson, Good Morning Vietnam, 1988 (10) - Drama
Sleepless in Seattle, 1993, Nora Ephron (10) - Comedy
==========================
Don't know how to create B
Don't know how to create B
Barry Levinson, Good Morning Vietnam, 1988 (10) - Drama
Sleepless in Seattle, 1993, Nora Ephron (10) - Comedy
==========================
Don't know how to create H
End testStoreFinal
=====================================
Done.
=====================================================
3. If the section below is empty, then there are no clang-tidy warnings 
   (ignore warnings from system headers, such as "13554 warnings generated.")
=====================================================
[1/8] Processing file /home/cssuwbstudent/Kwright6/CSS343/343-movies-Kwright6/comedy.cpp.
17020 warnings generated.
[2/8] Processing file /home/cssuwbstudent/Kwright6/CSS343/343-movies-Kwright6/command.cpp.
36752 warnings generated.
[3/8] Processing file /home/cssuwbstudent/Kwright6/CSS343/343-movies-Kwright6/drama.cpp.
53772 warnings generated.
[4/8] Processing file /home/cssuwbstudent/Kwright6/CSS343/343-movies-Kwright6/inventoryCmd.cpp.
73506 warnings generated.
[5/8] Processing file /home/cssuwbstudent/Kwright6/CSS343/343-movies-Kwright6/main.cpp.
87309 warnings generated.
[6/8] Processing file /home/cssuwbstudent/Kwright6/CSS343/343-movies-Kwright6/movie.cpp.
104344 warnings generated.
[7/8] Processing file /home/cssuwbstudent/Kwright6/CSS343/343-movies-Kwright6/movieStore.cpp.
125096 warnings generated.
[8/8] Processing file /home/cssuwbstudent/Kwright6/CSS343/343-movies-Kwright6/store_test.cpp.
145850 warnings generated.
Suppressed 145850 warnings (145850 in non-user code).
Use -header-filter=.* to display errors from all non-system headers. Use -system-headers to display errors from system headers as well.
=====================================================
4. If the section below is empty, clang-format does not find any formatting issues
   You can fix formatting errors using "clang-format -i <filename>" on command line
=====================================================
Running clang-format on ./comedy.cpp
Running clang-format on ./command.cpp
Running clang-format on ./drama.cpp
Running clang-format on ./inventoryCmd.cpp
Running clang-format on ./main.cpp
Running clang-format on ./movie.cpp
Running clang-format on ./movieStore.cpp
Running clang-format on ./store_test.cpp
=====================================================
5. If there are any memory leaks, it should be in the output below
=====================================================
=====================================================
6. Using valgrind to check for memory leaks
   Check for "definitely lost" in the output below
=====================================================
==18449== Memcheck, a memory error detector
==18449== Copyright (C) 2002-2024, and GNU GPL'd, by Julian Seward et al.
==18449== Using Valgrind-3.23.0 and LibVEX; rerun with -h for copyright info
==18449== Command: ./a.out
==18449== Parent PID: 18090
==18449== 
==18449== 
==18449== HEAP SUMMARY:
==18449==     in use at exit: 524 bytes in 11 blocks
==18449==   total heap usage: 107 allocs, 96 frees, 117,085 bytes allocated
==18449== 
==18449== LEAK SUMMARY:
==18449==    definitely lost: 400 bytes in 7 blocks
==18449==    indirectly lost: 124 bytes in 4 blocks
==18449==      possibly lost: 0 bytes in 0 blocks
==18449==    still reachable: 0 bytes in 0 blocks
==18449==         suppressed: 0 bytes in 0 blocks
==18449== Rerun with --leak-check=full to see details of leaked memory
==18449== 
==18449== For lists of detected and suppressed errors, rerun with: -s
==18449== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
Wed Jun  4 08:22:24 UTC 2025
=====================================================
To create an output.txt file with all the output from this script
Run the below command
      ./create-output.sh > output.txt 2>&1 
=====================================================
